#BlueJ class context
comment0.params=nTipe
comment0.target=ClockDisplay(java.lang.String)
comment1.params=nHour\ nMinute\ nTipe
comment1.target=ClockDisplay(int,\ int,\ java.lang.String)
comment2.params=nHour\ nMinute
comment2.target=void\ setTime(int,\ int)
comment2.text=\r\n\ Creamos\ un\ m\u00E9todo\ que\ nos\ permite\ cambiar\ la\ hora\ del\ reloj\ y\ la\ rectifica\ al\ format\r\n\ correcto\ si\ el\ formato\ de\ reloj\ seleccionado\ es\ "medio"(12horas)\r\n
comment3.params=
comment3.target=void\ timeTick()
comment3.text=\r\n\ Creamos\ el\ metodo\ que\ hace\ pasar\ la\ hora\ un\ minuto\ de\ tal\ forma\ que\ si\ el\ \r\n\ modo\ de\ reloj\ seleccionado\ es\ simple\ la\ hora\ llegue\ a\ las\ 23\:59\ y\ pase\ a\ \r\n\ 00\:00\ y\ si\ el\ modo\ del\ reloj\ es\ "Medio"\ (formato\ 12h)\ cuando\ las\ horas\ llegan\r\n\ a\ 12\ el\ rango\ entre\ AM\ y\ PM\ cambia\ si\ no,\ el\ funcionamiento\ del\ reloj\ es\ normal\r\n
comment4.params=
comment4.target=java.lang.String\ getTime()
comment4.text=\r\n\ Metodo\ que\ devuelve\ la\ hora\ actual\ dependiendo\ del\ formato,\ en\ caso\ de\ ser\ \r\n\ formato\ "medio"\ a\u00F1ade\ el\ rango\ adecuado\ al\ final\ (AM\ o\ PM)\r\n
comment5.params=
comment5.target=void\ DisplayValue()
comment5.text=\r\n\ \r\n
numComments=6
